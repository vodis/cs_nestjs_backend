name: "Build and push image"
description: "Builds and pushes an image to a registry"

inputs:
  token:
    description: "DockerHub secret token"
    required: true
  service_name:
    description: "Service to build e.g. dataset"
    required: true
  image_name:
    description: "Image registry repo e.g. my_image_repo"
    required: true
  image_tag:
    description: "Name of image tag (usually build number or commit hash)"
    required: true
  registry_url:
    description: "References to DockerHub registry"
    required: true
  dockerhub_username:
    description: "DockerHub username"
    required: true
  dockerhub_password:
    description: "DockerHub password"
    required: true

runs:
  using: composite
  steps:
    - name: Build, tag and ${{ inputs.service_name }} image
      run: |
        echo "#################################################"
        echo "Building image:"
        echo "IMAGE_NAME: ${{ inputs.image_name }}"
        echo "IMAGE_TAG: ${{ inputs.image_tag }}"
        echo "DOCKER_HUB_REFS: ${{ inputs.registry_url }}/${{ inputs.image_name }}:v_${{ inputs.image_tag }}"
        echo "#################################################"
        
        cp .env.example .env
        make docker-build
        docker image ls
        docker tag $(docker image ls | grep app | awk '{print $1}') ${{ inputs.image_name }}:${{ inputs.image_tag }}
        docker image ls
        
        echo ${{ inputs.dockerhub_password }} | docker login -u ${{ inputs.dockerhub_username }} --password-stdin
        
#        docker build -t "${{ inputs.registry_url }}/${{ inputs.image_name }}:v_${{ inputs.image_tag }}" .
        docker push "${{ inputs.registry_url }}/${{ inputs.image_name }}:v_${{ inputs.image_tag }}"
      shell: bash
