name: Reusable - Build Backend

on:
  workflow_call:
    inputs:
      service_name:
        description: "Application name you want to deploy (dataset, run, project, etc.)"
        required: false
        type: string
        default: ""
      environment:
        description: "Environment name you want to deploy to (dev, test, etc.)"
        required: false
        type: string
        default: ""
    secrets:
      DOCKER_ACCESS_TOKEN:
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service_name: ["${{ inputs.service_name }}"]
        environment: ["${{ inputs.environment }}"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Building and pushing image to registry
        uses: ./.github/actions/build-and-push
        with:
          service_name: ${{ matrix.service_name }}
          repo_name: "vodis-${{ matrix.environment }}-${{ matrix.service_name }}"
          image_tag: "${{ github.run_number }}"
          token: "${{ secrets.DOCKER_ACCESS_TOKEN }}"

      - name: Cleanup
        run: docker image rmi $(docker image ls | grep nftprim | awk '{print $3}') -f

#  deploy:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        service_name: [ "${{ inputs.service_name }}" ]
#        environment: [ "${{ inputs.environment }}" ]
#    needs: build
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: ðŸš€ Deploy file to server
#        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
#        with:
#          username: ${{ secrets.REMOTE_USER }}
#          server: '${{ secrets.REMOTE_HOST }}'
#          ssh_private_key: ${{ secrets.REMOTE_KEY }}
#          password: ${{ secrets.FTP_PASSWORD }}
#          local_path: './'
#          remote_path: ${{ secrets.FTP_PATH }}
#          sftpArgs: '-o ConnectTimeout=5'
#          sftp_only: true
